# Docker Compose for Tunisian Banking API
# SECURE: Uses environment variables from .env file

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-bank-tunisia
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C'
    ports:
      - '${DB_PORT:-5434}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bank-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Application
  bank-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bank-api-tunisia
    environment:
      # Database configuration - Uses environment variables
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE:-disable}

      # Secure application configuration
      PORT: ${PORT:-8080}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_ISSUER: ${JWT_ISSUER:-banque-tunisia-api}
      GIN_MODE: ${GIN_MODE:-release}

      # Tunisian banking configuration
      BANK_COUNTRY: TN
      DEFAULT_CURRENCY: TND
      SUPPORTED_CURRENCIES: 'TND,EUR,USD'
    ports:
      - '${PORT:-8080}:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bank-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Admin Interface (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-bank-tunisia
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - bank-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - dev

networks:
  bank-network:
    driver: bridge
    name: bank-tunisia-network

volumes:
  postgres_data:
    name: postgres-bank-tunisia-data
  pgadmin_data:
    name: pgadmin-bank-tunisia-data
